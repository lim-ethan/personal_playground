-- 01. FILE FORMAT 생성 (파일 및 압축 형식 지정)
CREATE OR REPLACE FILE FORMAT parquet_f
  TYPE = 'JSON'
  COMPRESSION = 'AUTO';


  
-- 02. INTEGRATION 생성
CREATE OR REPLACE STORAGE INTEGRATION to_s3_v4
  TYPE = EXTERNAL_STAGE
  storage_provider = S3
  storage_aws_role_arn='arn:aws:iam::484907520317:role/snowflake_to_s3'
  ENABLED = TRUE
  STORAGE_ALLOWED_LOCATIONS = ('s3://nuke-snowflake/test-export/rdsdb/rdsdb.price_table/1', 
                               's3://nuke-snowflake/test-export/rdsdb/rdsdb.price_table/*', 
                               's3://nuke-snowflake/real_estate/'
                            );

-- 03. STORAGE_AWS_IAM_USER_ARN값과 EXTERNAL_ID값 확인 후 AWS S3 신뢰정책에 적용
DESC STORAGE INTEGRATION to_s3_v4;
-- property	                    property_type
-- ENABLED	                    Boolean
-- STORAGE_PROVIDER	            String
-- STORAGE_ALLOWED_LOCATIONS	List
-- STORAGE_BLOCKED_LOCATIONS	List
-- STORAGE_AWS_IAM_USER_ARN	    String
-- STORAGE_AWS_ROLE_ARN	        String
-- STORAGE_AWS_EXTERNAL_ID	    String
-- USE_PRIVATELINK_ENDPOINT	    Boolean
-- COMMENT	                    String



-- 04. STAGE 생성 및 확인
CREATE OR REPLACE STAGE estimate_table
  URL = 's3://nuke-snowflake/real_estate/'
  STORAGE_INTEGRATION = to_s3_v4
  FILE_FORMAT = parquet_f;
  
LIST @estimate_table;
  



-- 05. STAGE를 이용하여 전체 JSON 데이터를 READ (for DEBUG)
CREATE OR REPLACE EXTERNAL TABLE s3_to_table_debug (
  contents VARIANT AS (VALUE)
)
WITH LOCATION = @estimate_table
FILE_FORMAT = parquet_f
REFRESH_ON_CREATE = FALSE
AUTO_REFRESH = FALSE;



-- 06. EXTERNAL TABLE REFRESH & CHECK
ALTER EXTERNAL TABLE s3_to_table_debug REFRESH;
DESCRIBE EXTERNAL TABLE hrlim_ext_table_v4;


-- 07. META DATA를 포함한 EXTERNAL 데이터 조회 (특정 파일명 기준 FILTER 포함)
SELECT contents,
  METADATA$FILENAME AS FILE_NAME,
  CURRENT_TIMESTAMP() AS LOADED_AT
FROM s3_to_table_debug
-- WHERE METADATA$FILENAME LIKE '%real_estate/DISTRICT_APARTMENT%'
-- WHERE METADATA$FILENAME LIKE '%real_estate/MEGA_WORK_POPULATION%'



-- 08. DISTRICT_APARTMENT 테이블 생성 / 서울시 상권분석서비스(직장인구-서울시)
CREATE OR REPLACE TABLE PO3.POPULATION.DISTRICT_APARTMENT AS
SELECT
  contents:"AE_132_SQMT_HSHLD_CO"::INTEGER           AS AE_132_SQUARE_METER_HOUSEHOLD_COUNT,
  contents:"AE_165_SQMT_HSHLD_CO"::INTEGER           AS AE_165_SQUARE_METER_HOUSEHOLD_COUNT,
  contents:"AE_66_SQMT_BELO_HSHLD_CO"::INTEGER       AS AE_66_SQUARE_METER_BELOW_HOUSEHOLD_COUNT,
  contents:"AE_66_SQMT_HSHLD_CO"::INTEGER            AS AE_66_SQUARE_METER_HOUSEHOLD_COUNT,
  contents:"AE_99_SQMT_HSHLD_CO"::INTEGER            AS AE_99_SQUARE_METER_HOUSEHOLD_COUNT,
  contents:"APT_HSMP_CO"::INTEGER                    AS APARTMENT_COMPLEX_COUNT,
  contents:"AVRG_AE"::FLOAT                          AS AVERAGE_AREA,
  contents:"AVRG_MKTC"::FLOAT                        AS AVERAGE_MARKET_PRICE,
  contents:"PC_1_HDMIL_BELO_HSHLD_CO"::INTEGER       AS BELOW_100M_HOUSEHOLD_COUNT,
  contents:"PC_1_HDMIL_HSHLD_CO"::INTEGER            AS UNDER_100M_HOUSEHOLD_COUNT,
  contents:"PC_2_HDMIL_HSHLD_CO"::INTEGER            AS UNDER_200M_HOUSEHOLD_COUNT,
  contents:"PC_3_HDMIL_HSHLD_CO"::INTEGER            AS UNDER_300M_HOUSEHOLD_COUNT,
  contents:"PC_4_HDMIL_HSHLD_CO"::INTEGER            AS UNDER_400M_HOUSEHOLD_COUNT,
  contents:"PC_5_HDMIL_HSHLD_CO"::INTEGER            AS UNDER_500M_HOUSEHOLD_COUNT,
  contents:"PC_6_HDMIL_ABOVE_HSHLD_CO"::INTEGER      AS ABOVE_600M_HOUSEHOLD_COUNT,
  contents:"SIGNGU_CD"::STRING                       AS DISTRICT_CODE,
  contents:"SIGNGU_CD_NM"::STRING                    AS DISTRICT_NAME,
  contents:"STDR_YYQU_CD"::STRING                    AS STANDARD_YEAR_QUARTER_CODE,
  METADATA$FILENAME                                  AS FILE_NAME,
  CURRENT_TIMESTAMP()                                AS LOADED_AT
FROM s3_to_table_debug
WHERE METADATA$FILENAME LIKE '%real_estate/DISTRICT_APARTMENT%';




-- 09. DISTRICT_WORK_POPULATION 테이블 생성 / 서울시 상권분석서비스(아파트-자치구)
CREATE OR REPLACE TABLE PO3.POPULATION.DISTRICT_WORK_POPULATION AS
SELECT
  contents:"AGRDE_10_WRC_POPLTN_CO"::INT AS AGRDE_10_WRC_POPLTN_CO,
  contents:"AGRDE_20_WRC_POPLTN_CO"::INT AS AGRDE_20_WRC_POPLTN_CO,
  contents:"AGRDE_30_WRC_POPLTN_CO"::INT AS AGRDE_30_WRC_POPLTN_CO,
  contents:"AGRDE_40_WRC_POPLTN_CO"::INT AS AGRDE_40_WRC_POPLTN_CO,
  contents:"AGRDE_50_WRC_POPLTN_CO"::INT AS AGRDE_50_WRC_POPLTN_CO,
  contents:"AGRDE_60_ABOVE_WRC_POPLTN_CO"::INT AS AGRDE_60_ABOVE_WRC_POPLTN_CO,
  contents:"FAG_10_WRC_POPLTN_CO"::INT AS FAG_10_WRC_POPLTN_CO,
  contents:"FAG_20_WRC_POPLTN_CO"::INT AS FAG_20_WRC_POPLTN_CO,
  contents:"FAG_30_WRC_POPLTN_CO"::INT AS FAG_30_WRC_POPLTN_CO,
  contents:"FAG_40_WRC_POPLTN_CO"::INT AS FAG_40_WRC_POPLTN_CO,
  contents:"FAG_50_WRC_POPLTN_CO"::INT AS FAG_50_WRC_POPLTN_CO,
  contents:"FAG_60_ABOVE_WRC_POPLTN_CO"::INT AS FAG_60_ABOVE_WRC_POPLTN_CO,
  contents:"FML_WRC_POPLTN_CO"::INT AS FML_WRC_POPLTN_CO,
  contents:"MAG_10_WRC_POPLTN_CO"::INT AS MAG_10_WRC_POPLTN_CO,
  contents:"MAG_20_WRC_POPLTN_CO"::INT AS MAG_20_WRC_POPLTN_CO,
  contents:"MAG_30_WRC_POPLTN_CO"::INT AS MAG_30_WRC_POPLTN_CO,
  contents:"MAG_40_WRC_POPLTN_CO"::INT AS MAG_40_WRC_POPLTN_CO,
  contents:"MAG_50_WRC_POPLTN_CO"::INT AS MAG_50_WRC_POPLTN_CO,
  contents:"MAG_60_ABOVE_WRC_POPLTN_CO"::INT AS MAG_60_ABOVE_WRC_POPLTN_CO,
  contents:"MEGA_CD"::STRING AS MEGA_CD,
  contents:"MEGA_CD_NM"::STRING AS MEGA_CD_NM,
  contents:"ML_WRC_POPLTN_CO"::INT AS ML_WRC_POPLTN_CO,
  contents:"STDR_YYQU_CD"::STRING AS STDR_YYQU_CD,
  contents:"TOT_WRC_POPLTN_CO"::INT AS TOT_WRC_POPLTN_CO,
  METADATA$FILENAME AS FILE_NAME,
  CURRENT_TIMESTAMP() AS LOADED_AT
FROM s3_to_table_debug
WHERE METADATA$FILENAME LIKE '%real_estate/MEGA_WORK_POPULATION%';


-- 10. 적재된 데이터 확인
SELECT * FROM PO3.POPULATION.DISTRICT_WORK_POPULATION;
-- SELECT * FROM PO3.POPULATION.DISTRICT_APARTMENT;



